version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:15.3
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s
    expose:
      - "5432"
    ports:
      - "5432"
    networks:
      - net

  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
    entrypoint: /bin/sh
    command: db/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      ENABLE_PRIVATE_API: "NO"
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      SOLANA_KEY_FOR_EVM_CONFIG: BMp6gEnveANdvSvspESJUrNczuHz1GF5UQKjVLCkAZih
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
    ports:
      - 9090:9090
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    healthcheck:
      test: [ CMD-SHELL, "/opt/neon-proxy/proxy/health_check_proxy.sh" ]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  faucet:
    container_name: faucet
    image: neonlabsorg/faucet:${FAUCET_COMMIT}
    environment:
      FAUCET_RPC_BIND: 0.0.0.0
      FAUCET_RPC_PORT: 3333
      FAUCET_WEB3_ENABLE: 'true'
      WEB3_PRIVATE_KEY: 0x4deacb079b4714c38f39508aa8900039f2721ed8686835d43347ba9267da767b
      NEON_ERC20_TOKENS: '["0xB521b9F3484deF53545F276F1DAA50ef0Ca82E2d", "0x8a2a66CA0E5D491A001957edD45A6350bC76D708", "0x914782059DC42d4E590aeFCfdbF004B2EcBB9fAA", "0x7A7510b9b18241C788a7aAE8299D1fA6010D8128"]'
      NEON_ERC20_MAX_AMOUNT: 1000
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: ${SOLANA_URL}
      NEON_OPERATOR_KEYFILE: /root/.config/solana/id.json
      NEON_ETH_MAX_AMOUNT: 50000
      TEST_FAUCET_INIT_NEON_BALANCE: 100000000
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      NEON_TOKEN_MINT: HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU
      NEON_TOKEN_MINT_DECIMALS: 9
      SOLANA_COMMITMENT: confirmed
      RUST_BACKTRACE: ${RUST_BACKTRACE:-0}
    hostname: faucet
    ports:
      - 3333:3333
    networks:
      - net
    entrypoint: ./run-test-faucet.sh

  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: ${SOLANA_URL}
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      GATHER_STATISTICS: "YES"
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    hostname: indexer
    depends_on:
      dbcreation:
        condition: service_completed_successfully
    networks:
      - net
    entrypoint: indexer/run-indexer.sh


networks:
  net:
